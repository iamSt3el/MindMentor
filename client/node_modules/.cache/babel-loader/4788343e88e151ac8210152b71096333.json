{"ast":null,"code":"var _jsxFileName = \"/home/steel/projects/mindmentor/src/pages/TestPage/index.jsx\";\nimport React, { useState } from 'react';\nimport { ArrowLeft } from 'lucide-react';\nimport styles from './testpage.module.scss';\nconst TestPage = ({\n  onBackToDashboard\n}) => {\n  const [answers, setAnswers] = useState({});\n  const questions = [{\n    id: 1,\n    question: \"What is the primary function of a neural network's activation function?\",\n    options: [\"To initialize weights\", \"To introduce non-linearity\", \"To calculate the loss\", \"To update the learning rate\"],\n    correctAnswer: 1\n  }, {\n    id: 1,\n    question: \"What is the primary function of a neural network's activation function?\",\n    options: [\"To initialize weights\", \"To introduce non-linearity\", \"To calculate the loss\", \"To update the learning rate\"],\n    correctAnswer: 1\n  }, {\n    id: 1,\n    question: \"What is the primary function of a neural network's activation function?\",\n    options: [\"To initialize weights\", \"To introduce non-linearity\", \"To calculate the loss\", \"To update the learning rate\"],\n    correctAnswer: 1\n  }, {\n    id: 2,\n    question: \"What is the primary function of a neural network's activation function?\",\n    options: [\"To initialize weights\", \"To introduce non-linearity\", \"To calculate the loss\", \"To update the learning rate\"],\n    correctAnswer: 1\n  }\n  // ... other questions ...\n  ];\n  const handleAnswerSelect = (questionId, answerIndex) => {\n    setAnswers(prev => ({\n      ...prev,\n      [questionId]: answerIndex\n    }));\n  };\n  const handleSubmit = () => {\n    let score = 0;\n    questions.forEach(q => {\n      if (answers[q.id] === q.correctAnswer) {\n        score++;\n      }\n    });\n    alert(`You scored ${score} out of ${questions.length}`);\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.testpage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.testcontainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: styles.backbutton,\n    onClick: onBackToDashboard,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(ArrowLeft, {\n    className: styles.backicon,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 11\n    }\n  }), \" Back to Dashboard\"), /*#__PURE__*/React.createElement(\"h1\", {\n    className: styles.pagetitle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 9\n    }\n  }, \"MindMentor Test\"), questions.map((q, qIndex) => /*#__PURE__*/React.createElement(\"div\", {\n    key: q.id,\n    className: styles.questioncard,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    className: styles.questionnumber,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 13\n    }\n  }, \"Question \", qIndex + 1), /*#__PURE__*/React.createElement(\"p\", {\n    className: styles.questiontext,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 13\n    }\n  }, q.question), /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.optionscontainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 13\n    }\n  }, q.options.map((option, index) => /*#__PURE__*/React.createElement(\"button\", {\n    key: index,\n    className: `${styles.optionbutton} ${answers[q.id] === index ? 'selected' : ''}`,\n    onClick: () => handleAnswerSelect(q.id, index),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 17\n    }\n  }, option))))), /*#__PURE__*/React.createElement(\"button\", {\n    className: styles.submitbutton,\n    onClick: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 9\n    }\n  }, \"Submit Test\")));\n};\nexport default TestPage;","map":{"version":3,"names":["React","useState","ArrowLeft","styles","TestPage","onBackToDashboard","answers","setAnswers","questions","id","question","options","correctAnswer","handleAnswerSelect","questionId","answerIndex","prev","handleSubmit","score","forEach","q","alert","length","createElement","className","testpage","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","testcontainer","backbutton","onClick","backicon","pagetitle","map","qIndex","key","questioncard","questionnumber","questiontext","optionscontainer","option","index","optionbutton","submitbutton"],"sources":["/home/steel/projects/mindmentor/src/pages/TestPage/index.jsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { ArrowLeft } from 'lucide-react';\nimport styles from './testpage.module.scss';\n\nconst TestPage = ({ onBackToDashboard }) => {\n  const [answers, setAnswers] = useState({});\n\n  const questions = [\n    {\n      id: 1,\n      question: \"What is the primary function of a neural network's activation function?\",\n      options: [\n        \"To initialize weights\",\n        \"To introduce non-linearity\",\n        \"To calculate the loss\",\n        \"To update the learning rate\"\n      ],\n      correctAnswer: 1,\n    },\n    {\n        id: 1,\n        question: \"What is the primary function of a neural network's activation function?\",\n        options: [\n          \"To initialize weights\",\n          \"To introduce non-linearity\",\n          \"To calculate the loss\",\n          \"To update the learning rate\"\n        ],\n        correctAnswer: 1,\n      },\n      {\n        id: 1,\n        question: \"What is the primary function of a neural network's activation function?\",\n        options: [\n          \"To initialize weights\",\n          \"To introduce non-linearity\",\n          \"To calculate the loss\",\n          \"To update the learning rate\"\n        ],\n        correctAnswer: 1,\n      },\n      {\n        id: 2,\n        question: \"What is the primary function of a neural network's activation function?\",\n        options: [\n          \"To initialize weights\",\n          \"To introduce non-linearity\",\n          \"To calculate the loss\",\n          \"To update the learning rate\"\n        ],\n        correctAnswer: 1,\n      },\n    // ... other questions ...\n  ];\n\n  const handleAnswerSelect = (questionId, answerIndex) => {\n    setAnswers(prev => ({\n      ...prev,\n      [questionId]: answerIndex\n    }));\n  };\n\n  const handleSubmit = () => {\n    let score = 0;\n    questions.forEach(q => {\n      if (answers[q.id] === q.correctAnswer) {\n        score++;\n      }\n    });\n    alert(`You scored ${score} out of ${questions.length}`);\n  };\n\n  return (\n    <div className={styles.testpage}>\n      <div className={styles.testcontainer}>\n        <button className={styles.backbutton} onClick={onBackToDashboard}>\n          <ArrowLeft className={styles.backicon} /> Back to Dashboard\n        </button>\n        <h1 className={styles.pagetitle}>MindMentor Test</h1>\n        {questions.map((q, qIndex) => (\n          <div key={q.id} className={styles.questioncard}>\n            <h2 className={styles.questionnumber}>Question {qIndex + 1}</h2>\n            <p className={styles.questiontext}>{q.question}</p>\n            <div className={styles.optionscontainer}>\n              {q.options.map((option, index) => (\n                <button\n                  key={index}\n                  className={`${styles.optionbutton} ${answers[q.id] === index ? 'selected' : ''}`}\n                  onClick={() => handleAnswerSelect(q.id, index)}\n                >\n                  {option}\n                </button>\n              ))}\n            </div>\n          </div>\n        ))}\n        <button className={styles.submitbutton} onClick={handleSubmit}>\n          Submit Test\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default TestPage;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}