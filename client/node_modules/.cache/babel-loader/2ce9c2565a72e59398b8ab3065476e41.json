{"ast":null,"code":"var _jsxFileName = \"/home/steel/projects/mindmentor/client/src/pages/TestPage/index.jsx\";\nimport React, { useState } from 'react';\nimport { ArrowLeft } from 'lucide-react';\nimport styles from './testpage.module.scss';\nconst TestPage = ({\n  onBackToDashboard\n}) => {\n  const [answers, setAnswers] = useState({});\n  const questions = [{\n    id: 1,\n    question: \"What is the primary function of a neural network's activation function?\",\n    options: [\"To initialize weights\", \"To introduce non-linearity\", \"To calculate the loss\", \"To update the learning rate\"],\n    correctAnswer: 1\n  }, {\n    id: 2,\n    question: \"Which of the following is not a common type of neural network?\",\n    options: [\"Convolutional Neural Network (CNN)\", \"Recurrent Neural Network (RNN)\", \"Feedforward Neural Network\", \"Quantum Neural Network (QNN)\"],\n    correctAnswer: 3\n  }, {\n    id: 3,\n    question: \"What does the term 'epoch' refer to in machine learning?\",\n    options: [\"A single training example\", \"The learning rate of the model\", \"One complete pass through the entire training dataset\", \"The accuracy of the model on the test set\"],\n    correctAnswer: 2\n  }, {\n    id: 4,\n    question: \"Which of the following is a supervised learning algorithm?\",\n    options: [\"K-means clustering\", \"Principal Component Analysis (PCA)\", \"Linear Regression\", \"Autoencoders\"],\n    correctAnswer: 2\n  }, {\n    id: 5,\n    question: \"What is the purpose of regularization in machine learning models?\",\n    options: [\"To increase model complexity\", \"To reduce overfitting\", \"To speed up training time\", \"To increase the learning rate\"],\n    correctAnswer: 1\n  }];\n  const handleAnswerSelect = (questionId, answerIndex) => {\n    setAnswers(prev => ({\n      ...prev,\n      [questionId]: answerIndex\n    }));\n  };\n  const handleSubmit = () => {\n    let score = 0;\n    questions.forEach(q => {\n      if (answers[q.id] === q.correctAnswer) {\n        score++;\n      }\n    });\n    alert(`You scored ${score} out of ${questions.length}`);\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.testPage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.testContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: styles.backButton,\n    onClick: onBackToDashboard,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(ArrowLeft, {\n    className: styles.backIcon,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 11\n    }\n  }), \" Back to Dashboard\"), /*#__PURE__*/React.createElement(\"h1\", {\n    className: styles.pageTitle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 9\n    }\n  }, \"MindMentor Test\"), questions.map((q, qIndex) => /*#__PURE__*/React.createElement(\"div\", {\n    key: q.id,\n    className: styles.questionCard,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    className: styles.questionNumber,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 13\n    }\n  }, \"Question \", qIndex + 1), /*#__PURE__*/React.createElement(\"p\", {\n    className: styles.questionText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 13\n    }\n  }, q.question), /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.optionsContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 13\n    }\n  }, q.options.map((option, index) => /*#__PURE__*/React.createElement(\"label\", {\n    key: index,\n    className: styles.optionLabel,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"radio\",\n    name: `question-${q.id}`,\n    value: index,\n    checked: answers[q.id] === index,\n    onChange: () => handleAnswerSelect(q.id, index),\n    className: styles.optionInput,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 19\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    className: styles.optionText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 19\n    }\n  }, option)))))), /*#__PURE__*/React.createElement(\"button\", {\n    className: styles.submitButton,\n    onClick: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 9\n    }\n  }, \"Submit Test\")));\n};\nexport default TestPage;","map":{"version":3,"names":["React","useState","ArrowLeft","styles","TestPage","onBackToDashboard","answers","setAnswers","questions","id","question","options","correctAnswer","handleAnswerSelect","questionId","answerIndex","prev","handleSubmit","score","forEach","q","alert","length","createElement","className","testPage","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","testContainer","backButton","onClick","backIcon","pageTitle","map","qIndex","key","questionCard","questionNumber","questionText","optionsContainer","option","index","optionLabel","type","name","value","checked","onChange","optionInput","optionText","submitButton"],"sources":["/home/steel/projects/mindmentor/client/src/pages/TestPage/index.jsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { ArrowLeft } from 'lucide-react';\nimport styles from './testpage.module.scss';\n\nconst TestPage = ({ onBackToDashboard }) => {\n  const [answers, setAnswers] = useState({});\n\n  const questions = [\n    {\n      id: 1,\n      question: \"What is the primary function of a neural network's activation function?\",\n      options: [\n        \"To initialize weights\",\n        \"To introduce non-linearity\",\n        \"To calculate the loss\",\n        \"To update the learning rate\"\n      ],\n      correctAnswer: 1\n    },\n    {\n      id: 2,\n      question: \"Which of the following is not a common type of neural network?\",\n      options: [\n        \"Convolutional Neural Network (CNN)\",\n        \"Recurrent Neural Network (RNN)\",\n        \"Feedforward Neural Network\",\n        \"Quantum Neural Network (QNN)\"\n      ],\n      correctAnswer: 3\n    },\n    {\n      id: 3,\n      question: \"What does the term 'epoch' refer to in machine learning?\",\n      options: [\n        \"A single training example\",\n        \"The learning rate of the model\",\n        \"One complete pass through the entire training dataset\",\n        \"The accuracy of the model on the test set\"\n      ],\n      correctAnswer: 2\n    },\n    {\n      id: 4,\n      question: \"Which of the following is a supervised learning algorithm?\",\n      options: [\n        \"K-means clustering\",\n        \"Principal Component Analysis (PCA)\",\n        \"Linear Regression\",\n        \"Autoencoders\"\n      ],\n      correctAnswer: 2\n    },\n    {\n      id: 5,\n      question: \"What is the purpose of regularization in machine learning models?\",\n      options: [\n        \"To increase model complexity\",\n        \"To reduce overfitting\",\n        \"To speed up training time\",\n        \"To increase the learning rate\"\n      ],\n      correctAnswer: 1\n    }\n  ];\n\n  const handleAnswerSelect = (questionId, answerIndex) => {\n    setAnswers(prev => ({\n      ...prev,\n      [questionId]: answerIndex\n    }));\n  };\n\n  const handleSubmit = () => {\n    let score = 0;\n    questions.forEach(q => {\n      if (answers[q.id] === q.correctAnswer) {\n        score++;\n      }\n    });\n    alert(`You scored ${score} out of ${questions.length}`);\n  };\n\n  return (\n    <div className={styles.testPage}>\n      <div className={styles.testContainer}>\n        <button className={styles.backButton} onClick={onBackToDashboard}>\n          <ArrowLeft className={styles.backIcon} /> Back to Dashboard\n        </button>\n        <h1 className={styles.pageTitle}>MindMentor Test</h1>\n        {questions.map((q, qIndex) => (\n          <div key={q.id} className={styles.questionCard}>\n            <h2 className={styles.questionNumber}>Question {qIndex + 1}</h2>\n            <p className={styles.questionText}>{q.question}</p>\n            <div className={styles.optionsContainer}>\n              {q.options.map((option, index) => (\n                <label key={index} className={styles.optionLabel}>\n                  <input\n                    type=\"radio\"\n                    name={`question-${q.id}`}\n                    value={index}\n                    checked={answers[q.id] === index}\n                    onChange={() => handleAnswerSelect(q.id, index)}\n                    className={styles.optionInput}\n                  />\n                  <span className={styles.optionText}>{option}</span>\n                </label>\n              ))}\n            </div>\n          </div>\n        ))}\n        <button className={styles.submitButton} onClick={handleSubmit}>\n          Submit Test\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default TestPage;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}